#ifndef _AMUL_H_
#define _AMUL_H_

// Returns mul * arr[i], or mul when arr == NULL;
#define amul(arr, mul, i) (arr == NULL)? (mul): (mul * arr[i])

// Returns m * a[i], or m when a == NULL;
#define vmul(ax, ay, az, mx, my, mz, i) make_float3(amul(ax, mx, i), amul(ay, my, i), amul(az, mz, i))

// Returns 1/Msat, or 0 when Msat == 0.
#define inv_Msat(Ms_, Ms_mul, i) (amul(Ms_, Ms_mul, i) == 0) ? 0.0f : (1.0f / (Ms_mul * Ms_[i]))
#endif
