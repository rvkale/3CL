// +build ignore

// This program generates Go wrappers for opencl sources.
// The opencl file should contain exactly one __kernel void.

package main

import (
	"bufio"
	"bytes"
	"io"
	"os"
	"regexp"
	"text/scanner"
	"text/template"

	"github.com/mumax/3cl/util"
	"github.com/mumax/3cl/opencl/cl/kernels"
)

type dataStruct struct {
	HeadSeq	[]string
	CodeSeq	[]string
	Header	map[string]string
	Code	map[string]string
}

func main() {
	codes := &dataStruct{kernels.OCLHeadersList, kernels.OCLKernelsList, kernels.Kernel_headers, kernels.Kernel_code}

        wrapfname := "program_wrapper.go"
        wrapout, err := os.OpenFile(wrapfname, os.O_WRONLY|os.O_CREATE|os.O_TRUNC, 0666)
        util.PanicErr(err)
        defer wrapout.Close()
        util.PanicErr(templ.Execute(wrapout, codes))

}

// wrapper code template text
const templText = `package kernels

/*
 THIS FILE IS AUTO-GENERATED BY OPENCL2GO.
 EDITING IS FUTILE.
*/

const(

)

`

// wrapper code template
var templ = template.Must(template.New("wrap").Parse(templText))

